openapi: 3.0.3
info:
  title: Account Service API
  description: API para la gestion de cuentas bancarias
  version: 1.0.0
servers:
  - url: http://localhost:8090/api/v1
    description: Local development server
paths:
  /accounts:
    get:
      tags:
        - Account
      summary: Get all accounts
      operationId: getAllAccounts
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
        - name: accountType
          in: query
          schema:
            type: string
            enum: [SAVINGS, CHECKING, FIXED_TERM]
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'
    post:
      tags:
        - Account
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: Invalid request

  /accounts/{id}:
    get:
      tags:
        - Account
      summary: Get account by ID
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
    put:
      tags:
        - Account
      summary: Update account
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
      responses:
        '200':
          description: Account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: Invalid request
        '404':
          description: Account not found
    delete:
      tags:
        - Account
      summary: Delete account
      operationId: deleteAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Account deleted successfully
        '404':
          description: Account not found

  /accounts/{id}/balance:
    get:
      tags:
        - Account
      summary: Get account balance
      operationId: getAccountBalance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponseDTO'
components:
  schemas:
    AccountDTO:
      type: object
      discriminator:
        propertyName: accountType
        mapping:
          SAVINGS: '#/components/schemas/SavingsAccountDTO'
          CHECKING: '#/components/schemas/CheckingAccountDTO'
          FIXED_TERM: '#/components/schemas/FixedTermAccountDTO'
      required:
        - accountType
        - accountNumber
        - customerId
        - balance
        - status
      properties:
        id:
          type: string
        accountType:
          type: string
          enum: [SAVINGS, CHECKING, FIXED_TERM]
        accountNumber:
          type: string
        customerId:
          type: string
        balance:
          type: number
          format: double
        status:
          type: string
          enum: [ACTIVE, INACTIVE, BLOCKED]
        accountHolders:
          type: array
          description: Lista de titulares de la cuenta (obligatorio al menos uno)
          items:
            $ref: '#/components/schemas/AccountHolderDTO'
        authorizedSigners:
          type: array
          description: Lista de firmantes autorizados (opcional)
          items:
            $ref: '#/components/schemas/AuthorizedSignerDTO'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SavingsAccountDTO:
      allOf:
        - $ref: '#/components/schemas/AccountDTO'
        - type: object
          properties:
            monthlyMovementLimit:
              type: integer
            currentMonthMovements:
              type: integer

    CheckingAccountDTO:
      allOf:
        - $ref: '#/components/schemas/AccountDTO'
        - type: object
          required:
            - maintenanceFee
          properties:
            maintenanceFee:
              type: number
              format: double

    FixedTermAccountDTO:
      allOf:
        - $ref: '#/components/schemas/AccountDTO'
        - type: object
          required:
            - withdrawalDay
          properties:
            withdrawalDay:
              type: integer
              minimum: 1
              maximum: 31

    AccountHolderDTO:
      type: object
      required:
        - documentNumber
        - signatureType
      properties:
        documentNumber:
          type: string
          description: Número de documento del firmante
        name:
          type: string
          description: Nombre completo del firmante
        holderType:
          type: string
          enum: [PRIMARY, SECONDARY]
          description: Tipo de titular (PRIMARY para titular principal, SECONDARY para cotitulares)
        signatureType:
          type: string
          enum: [INDIVIDUAL, JOINT]
          description: Tipo de firma requerida para operaciones

    AuthorizedSignerDTO:
      type: object
      required:
        - documentNumber
        - name
        - signatureType
      properties:
        documentNumber:
          type: string
          description: Número de documento del firmante
        name:
          type: string
          description: Nombre completo del firmante
        position:
          type: string
          description: Cargo en la empresa (opcional)
        signatureType:
          type: string
          enum: [INDIVIDUAL, JOINT]
          description: Tipo de firma requerida para operaciones
        transactionLimit:
          type: number
          description: Límite máximo por transacción (opcional)

    BalanceResponseDTO:
      type: object
      properties:
        accountId:
          type: string
        balance:
          type: number
        availableBalance:
          type: number
        currency:
          type: string
        lastUpdateDate:
          type: string
          format: date-time
